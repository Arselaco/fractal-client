{"version":3,"sources":["routes/Doctor/Graphs/Components/data3.js","routes/Doctor/Graphs/Components/TinyBarChart.js","routes/Doctor/Graphs/Products/index.js","components/ContainerHeader/index.js","routes/Doctor/Graphs/Components/data2.js","routes/Doctor/Graphs/Components/StackedBarChart.js"],"names":["data","name","value","color","TinyBarChart","width","height","margin","top","right","left","bottom","dataKey","domain","x","stroke","strokeDasharray","map","entry","index","key","fill","onChange","checkedValues","console","log","BarChart","match","className","title","lg","md","sm","xs","Group","style","span","ContainerHeader","only","combined","StackedBarChart"],"mappings":"gJAWeA,EAXF,CACX,CAACC,KAAM,OAASC,MAAO,EAAGC,MAAO,WACjC,CAACF,KAAM,eAAiBC,MAAO,EAAGC,MAAO,WACzC,CAACF,KAAM,aAAeC,MAAO,EAAGC,MAAO,WACvC,CAACF,KAAM,cAAgBC,MAAO,EAAGC,MAAO,WACxC,CAACF,KAAM,gBAAkBC,MAAO,EAAGC,MAAO,WAC1C,CAACF,KAAM,eAAiBC,MAAO,EAAGC,MAAO,WACzC,CAACF,KAAM,aAAeC,MAAO,EAAGC,MAAO,WACvC,CAACF,KAAM,cAAgBC,MAAO,EAAGC,MAAO,WACxC,CAACF,KAAM,gBAAkBC,MAAO,EAAGC,MAAO,YCiB7BC,IArBM,kBAEnB,kBAAC,IAAD,CAAqBC,MAAM,OAAOC,OAAQ,KACxC,kBAAC,IAAD,CAAUN,KAAMA,EACNO,OAAQ,CAACC,IAAK,GAAIC,MAAO,EAAGC,MAAO,GAAIC,OAAQ,IACvD,kBAAC,IAAD,CAAOC,QAAQ,SACf,kBAAC,IAAD,CAAOC,OAAQ,CAAC,IAAK,OACrB,kBAAC,IAAD,CAAeC,EAAE,OAAOC,OAAO,SAC/B,kBAAC,IAAD,CAAeC,gBAAgB,QAE/B,kBAAC,IAAD,MACM,kBAAC,IAAD,CAAMJ,QAAQ,SAEVZ,EAAKiB,KAAI,SAACC,EAAOC,GAAR,OAAkB,kBAAC,IAAD,CAAMC,IAAKD,EAAOE,KAAMH,EAAMf,gB,kCClBzE,6FAQA,SAASmB,EAASC,GAChBC,QAAQC,IAAI,aAAcF,GA2BbG,UAzBE,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACjB,OACE,yBAAKC,UAAU,mBACb,kBAAC,IAAD,CAAiBC,MAAM,oBAAoBF,MAAOA,IAElD,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKG,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAC/B,kBAAC,IAAD,CAAML,UAAU,UAAUC,MAAM,mBAC9B,kBAAC,IAASK,MAAV,CAAgBC,MAAO,CAAC9B,MAAO,QAASiB,SAAUA,GAChD,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKc,KAAM,GAAG,kBAAC,IAAD,CAAUR,UAAU,UAAU1B,MAAM,KAApC,MACd,kBAAC,IAAD,CAAKkC,KAAM,GAAG,kBAAC,IAAD,CAAUR,UAAU,UAAU1B,MAAM,KAApC,MACd,kBAAC,IAAD,CAAKkC,KAAM,GAAG,kBAAC,IAAD,CAAUR,UAAU,UAAU1B,MAAM,KAApC,MACd,kBAAC,IAAD,CAAKkC,KAAM,GAAG,kBAAC,IAAD,CAAUR,UAAU,UAAU1B,MAAM,KAApC,UAGlB,uBAAG0B,UAAU,WAAb,uHACA,kBAAC,IAAD,Y,iCC5BZ,oBAUeS,IARS,SAAC,GAAa,IAAZR,EAAW,EAAXA,MACxB,OACE,yBAAKD,UAAU,mBACb,wBAAIA,UAAU,iBAAiBC,M,8DCCtB7B,EANF,CACX,CAACC,KAAM,IAAMqC,KAAM,EAAGC,SAAU,GAChC,CAACtC,KAAM,IAAMqC,KAAM,EAAGC,SAAU,GAChC,CAACtC,KAAM,IAAMqC,KAAM,EAAGC,SAAU,GAChC,CAACtC,KAAM,MAAQqC,KAAM,EAAGC,SAAU,ICiBrBC,IAhBS,kBAEtB,kBAAC,IAAD,CAAqBnC,MAAM,OAAOC,OAAQ,KACxC,kBAAC,IAAD,CAAUN,KAAMA,EACNO,OAAQ,CAACC,IAAK,GAAIC,MAAO,EAAGC,MAAO,GAAIC,OAAQ,IACvD,kBAAC,IAAD,CAAOC,QAAQ,SACf,kBAAC,IAAD,CAAOC,OAAQ,CAAC,IAAK,OACrB,kBAAC,IAAD,CAAeG,gBAAgB,QAC/B,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAKJ,QAAQ,OAAQS,KAAK,YAC1B,kBAAC,IAAD,CAAKT,QAAQ,WAAYS,KAAK","file":"static/js/15.18f5095b.chunk.js","sourcesContent":["const data = [\n  {name: 'SEUL',  value: 4, color: '#306366'},\n  {name: 'ACCUPUNCTURE',  value: 2, color: '#103566'},\n  {name: 'ALLOPATHIE',  value: 1, color: '#203366'},\n  {name: 'HOMEOPATHIE',  value: 3, color: '#403366'},\n  {name: 'PHYTOTHERAPIE',  value: 4, color: '#503366'},\n  {name: 'ACCUPUNCTURE',  value: 5, color: '#103566'},\n  {name: 'ALLOPATHIE',  value: 1, color: '#203366'},\n  {name: 'HOMEOPATHIE',  value: 3, color: '#403366'},\n  {name: 'PHYTOTHERAPIE',  value: 4, color: '#503366'},\n];\nexport default data;\n","import React from \"react\";\nimport  {Bar,Cell, BarChart, CartesianGrid, ReferenceLine, ResponsiveContainer, Tooltip, XAxis, YAxis} from \"recharts\";\n\nimport data from \"./data3\";\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#00C49F', '#FFBB28', '#FF8042'];\nconst TinyBarChart = () => (\n\n  <ResponsiveContainer width=\"100%\" height={400}>\n    <BarChart data={data}\n              margin={{top: 10, right: 0, left: -15, bottom: 0}}>\n      <XAxis dataKey=\"name\"/>\n      <YAxis domain={['0', '5']} />\n      <ReferenceLine x=\"SEUL\" stroke=\"gray\" />\n      <CartesianGrid strokeDasharray=\"4 3\"/>\n\n      <Tooltip/>\n            <Bar  dataKey=\"value\"  >\n              {\n                data.map((entry, index) => <Cell key={index} fill={entry.color}/>)\n              }\n            </Bar>\n\n    </BarChart>\n  </ResponsiveContainer>\n);\n\nexport default TinyBarChart;\n\n","import React from \"react\";\nimport {Card, Col, Row, Checkbox} from \"antd\";\n\nimport TinyBarChart from \"../Components/TinyBarChart\";\nimport StackedBarChart from \"../Components/StackedBarChart\";\n\nimport ContainerHeader from \"components/ContainerHeader\";\n\nfunction onChange(checkedValues) {\n  console.log('checked = ', checkedValues);\n}\nconst BarChart = ({match}) => {\n  return (\n    <div className=\"gx-main-content\">\n      <ContainerHeader title=\"Graphique Produit\" match={match}/>\n\n      <Row>\n        <Col lg={24} md={24} sm={24} xs={24}>\n          <Card className=\"gx-card\" title=\"LACTOSE NIGELLE\">\n            <Checkbox.Group style={{width: '100%'}} onChange={onChange}>\n              <Row>\n                <Col span={2}><Checkbox className=\"gx-mb-3\" value=\"A\">H</Checkbox></Col>\n                <Col span={2}><Checkbox className=\"gx-mb-3\" value=\"B\">G</Checkbox></Col>\n                <Col span={2}><Checkbox className=\"gx-mb-3\" value=\"C\">F</Checkbox></Col>\n                <Col span={2}><Checkbox className=\"gx-mb-3\" value=\"D\">HFC</Checkbox></Col>\n              </Row>\n            </Checkbox.Group>\n            <p className=\"gx-mb-3\">Info : ce graphique représente l’efficacité des produits ci-dessus par rapport aux pathologies inscrites</p>\n            <TinyBarChart/>\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default BarChart;\n","import React from \"react\";\r\n\r\nconst ContainerHeader = ({title}) => {\r\n  return (\r\n    <div className=\"gx-page-heading\">\r\n      <h2 className=\"gx-page-title\">{title}</h2>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default ContainerHeader;\r\n\r\n","const data = [\n  {name: 'H',  only: 1, combined: 4,},\n  {name: 'G',  only: 2, combined: 3,},\n  {name: 'F',  only: 3, combined: 2,},\n  {name: 'HFC',  only: 2, combined: 5,},\n];\nexport default data;\n","import React from \"react\";\nimport {Bar, BarChart, CartesianGrid, Legend, ResponsiveContainer, Tooltip, XAxis, YAxis} from \"recharts\";\n\nimport data from \"./data2\";\n\nconst StackedBarChart = () => (\n\n  <ResponsiveContainer width=\"100%\" height={400}>\n    <BarChart data={data}\n              margin={{top: 10, right: 0, left: -15, bottom: 0}}>\n      <XAxis dataKey=\"name\"/>\n      <YAxis domain={['0', '5']}/>\n      <CartesianGrid strokeDasharray=\"3 3\"/>\n      <Tooltip/>\n      <Legend/>\n      <Bar dataKey=\"only\"  fill=\"#003366\"/>\n      <Bar dataKey=\"combined\"  fill=\"#FE9E15\"/>\n    </BarChart>\n  </ResponsiveContainer>\n);\n\nexport default StackedBarChart;\n"],"sourceRoot":""}